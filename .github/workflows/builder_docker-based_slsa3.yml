# Copyright 2023 SLSA Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Copyright The GOSST team.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

####################################################################
#                                                                  #
#                 THIS WORKFLOW IS DEPRECATED!                     #
#  Migrate to .github/workflows/builder_container-based_slsa3.yml. #
#                                                                  #
####################################################################


name: SLSA Docker-based builder

permissions:
  contents: read

env:
  # Builder.
  BUILDER_BINARY: slsa-builder-docker-linux-amd64 # Name of the binary in the release assets.
  BUILDER_DIR: internal/builders/docker # Source directory if we compile the builder.
  # SLSA outputs folder.
  OUTPUT_FOLDER: slsa-outputs

defaults:
  run:
    shell: bash

###################################################################
#                                                                 #
#            Input and output argument definitions                #
#                                                                 #
###################################################################
on:
  workflow_call:
    secrets:
      registry-username:
        description: >
          Username to log into the container registry. This should only be used for high
          entropy values.

          See https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/docker/README.md#workflow-inputs
      registry-password:
        description: "Password to log in the container registry."
    inputs:
      builder-image:
        description: >
          The OCI image name of the builder image responsible for
          creating the artifact. This must not include a tag or digest.
        required: true
        type: string
      builder-digest:
        description: >
          The OCI image digest of the builder-image.
          This must be specified in order to fully specify the builder
          image. The image digest is of the form '<alg>:<digest>'
        required: true
        type: string
      config-path:
        description: >
          Path to a configuration file relative to the root of the repository
          containing a command that the builder image should be invoked with and
          the path to the output artifacts.
        required: true
        type: string
      compile-builder:
        description: "Build the builder from source. This increases build time by ~2m."
        required: false
        type: boolean
        default: false
      rekor-log-public:
        description: >
          In case of a private GitHub repository, allow publication of your repository
          name on the public Rekor log"
        required: false
        type: boolean
        default: false
      provenance-name:
        description: >
          The artifact name of the signed provenance. The file must have the .intoto
          extension.
          Defaults to <filename>.intoto for single artifact or multiple.intoto.jsonl
          for multiple artifacts.
        required: false
        type: string
      upload-assets:
        description: >
          Uploads the artifact and provenance to a GitHub release.
          If the `upload-tag-name` was provided, then the assets are uploaded to the provided
          input tag. This can be used for workflow_dispatch events. Otherwise, if a new tag triggered
          the workflow, then the assets are uploaded to the triggering tag.
        required: false
        type: boolean
        default: true
      upload-tag-name:
        description: >
          If non-empty and `upload-assets` is set to true, the provenance is uploaded to the GitHub
          release identified by the tag name. If a workflow is run on a new tag and `upload-tag-name`
          is non-empty, the new tag is ignored and the value of `upload-tag-name` is used instead to upload
          the assets.
        type: string
        default: ""
        required: false
      prerelease:
        description: "If true, GitHub Release is created as a pre-release."
        required: false
        type: boolean
        default: false
      registry-username:
        description: "Username to log into the container registry."
        type: string
        required: false
      gcp-workload-identity-provider:
        description: >
          The full identifier of the Workload Identity Provider, including the project
          number, pool name, and provider name.
        required: false
        type: string
        default: ""
      gcp-service-account:
        description: >
          Email address or unique identifier of the Google Cloud service account for
          which to generate credentials.
        required: false
        type: string
        default: ""
      draft-release:
        description: "If true, the release is created as a draft. Defaults to false."
        required: false
        type: boolean
        default: false
    outputs:
      build-outputs-name:
        description: "The name of the artifact where the generated artifacts are uploaded to the artifact registry."
        value: ${{ jobs.inner-build.outputs.build-outputs-name }}
      attestations-download-name:
        description: >
          Name of the artifact to download all the attestations.

          When run on a `pull_request` trigger, attestations are not signed and have an ".intoto" extension.
          When run on other triggers, attestations are signed and have an "intoto.sigstore" extension.
        value: ${{ jobs.inner-build.outputs.attestations-download-name }}

jobs:
  inner-build:
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
      actions: read # For reading workflow info.
    uses: ./.github/workflows/builder_container-based_slsa3.yml
    secrets:
      registry-username: ${{ secrets.registry-username }}
      registry-password: ${{ secrets.registry-password }}
    with:
      builder-image: ${{ inputs.builder-image }}
      builder-digest: ${{ inputs.builder-digest }}
      config-path: ${{ inputs.config-path }}
      compile-builder: ${{ inputs.compile-builder }}
      rekor-log-public: ${{ inputs.rekor-log-public }}
      provenance-name: ${{ inputs.provenance-name }}
      upload-assets: ${{ inputs.upload-assets }}
      upload-tag-name: ${{ inputs.upload-tag-name }}
      prerelease: ${{ inputs.prerelease }}
      registry-username: ${{ inputs.registry-username }}
      gcp-workload-identity-provider: ${{ inputs.gcp-workload-identity-provider }}
      gcp-service-account: ${{ inputs.gcp-service-account }}
      draft-release: ${{ inputs.draft-release }}
